Search.setIndex({"alltitles": {"API Reference": [[3, "api-reference"]], "Add checks for any unusual data structures": [[2, "add-checks-for-any-unusual-data-structures"]], "Attacks": [[0, "attacks"]], "Base Class": [[9, "module-aisdc.safemodel.safemodel"]], "Contents:": [[3, null]], "Copy The Template": [[2, "copy-the-template"]], "Define the Safer Class": [[2, "define-the-safer-class"]], "Examples": [[1, "examples"]], "Extending SafeModel": [[2, "extending-safemodel"]], "Funding Statement": [[3, "funding-statement"]], "General Structure": [[5, "general-structure"]], "Include any optional helper functions": [[2, "include-any-optional-helper-functions"]], "Indices and tables": [[3, "indices-and-tables"]], "Introduction": [[4, "introduction"]], "JSON Output for MIA attacks": [[5, "json-output-for-mia-attacks"]], "LIRA Attack": [[5, "lira-attack"]], "Modular Design": [[2, "modular-design"]], "Override the fit() function": [[2, "override-the-fit-function"]], "Preprocessing": [[6, "module-aisdc.preprocessing.loaders"]], "Running MIA Attacks from Config File": [[5, "running-mia-attacks-from-config-file"]], "SafeDecisionTree": [[7, "safedecisiontree"]], "SafeDecisionTree Full Length Tutorial": [[1, "safedecisiontree-full-length-tutorial"]], "SafeKeras Quick Start Notebook": [[1, "safekeras-quick-start-notebook"]], "SafeKerasModel": [[8, "safekerasmodel"]], "SafeRandomForest": [[10, "saferandomforest"]], "SafeRandomForest Quick Start Notebook": [[1, "saferandomforest-quick-start-notebook"]], "SafeSVC": [[11, "safesvc"]], "SafeSVC Quick Start Notebook": [[1, "safesvc-quick-start-notebook"]], "Update Sphinx documentation": [[2, "update-sphinx-documentation"]], "Update rules.json file": [[2, "update-rules-json-file"]], "Update the __init__ method with paramnames, ignore_items, and examine_separately items": [[2, "update-the-init-method-with-paramnames-ignore-items-and-examine-separately-items"]], "Welcome to the AI-SDC documentation!": [[3, "welcome-to-the-ai-sdc-documentation"]], "What is safemodel?": [[4, "what-is-safemodel"]], "Worst-Case Attack": [[5, "worst-case-attack"]], "Write pytests to confirm core functionality": [[2, "write-pytests-to-confirm-core-functionality"]]}, "docnames": ["attacks", "examples", "extending", "index", "introduction", "output_format", "preprocessing", "safedecisiontree", "safekeras", "safemodel", "saferandomforest", "safesvc"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["attacks.rst", "examples.rst", "extending.rst", "index.rst", "introduction.rst", "output_format.rst", "preprocessing.rst", "safedecisiontree.rst", "safekeras.rst", "safemodel.rst", "saferandomforest.rst", "safesvc.rst"], "indexentries": {"__apply_constraints() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.__apply_constraints", false]], "__check_model_param() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.__check_model_param", false]], "__check_model_param_and() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.__check_model_param_and", false]], "__check_model_param_or() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.__check_model_param_or", false]], "__get_constraints() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.__get_constraints", false]], "__init__() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.__init__", false]], "__str__() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.__str__", false]], "__weakref__ (aisdc.safemodel.safemodel.safemodel attribute)": [[9, "aisdc.safemodel.safemodel.SafeModel.__weakref__", false]], "add_output_to_pdf() (in module aisdc.attacks.report)": [[0, "aisdc.attacks.report.add_output_to_pdf", false]], "additional_checks() (aisdc.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[7, "aisdc.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.additional_checks", false]], "additional_checks() (aisdc.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[10, "aisdc.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.additional_checks", false]], "additional_checks() (aisdc.safemodel.classifiers.safesvc.safesvc method)": [[11, "aisdc.safemodel.classifiers.safesvc.SafeSVC.additional_checks", false]], "additional_checks() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.additional_checks", false]], "aisdc.attacks.likelihood_attack": [[0, "module-aisdc.attacks.likelihood_attack", false]], "aisdc.attacks.report": [[0, "module-aisdc.attacks.report", false]], "aisdc.attacks.worst_case_attack": [[0, "module-aisdc.attacks.worst_case_attack", false]], "aisdc.metrics": [[0, "module-aisdc.metrics", false]], "aisdc.preprocessing.loaders": [[6, "module-aisdc.preprocessing.loaders", false]], "aisdc.safemodel.classifiers.safedecisiontreeclassifier": [[7, "module-aisdc.safemodel.classifiers.safedecisiontreeclassifier", false]], "aisdc.safemodel.classifiers.safekeras": [[8, "module-aisdc.safemodel.classifiers.safekeras", false]], "aisdc.safemodel.classifiers.saferandomforestclassifier": [[10, "module-aisdc.safemodel.classifiers.saferandomforestclassifier", false]], "aisdc.safemodel.classifiers.safesvc": [[11, "module-aisdc.safemodel.classifiers.safesvc", false]], "aisdc.safemodel.safemodel": [[9, "module-aisdc.safemodel.safemodel", false]], "attack() (aisdc.attacks.likelihood_attack.liraattack method)": [[0, "aisdc.attacks.likelihood_attack.LIRAAttack.attack", false]], "attack() (aisdc.attacks.worst_case_attack.worstcaseattack method)": [[0, "aisdc.attacks.worst_case_attack.WorstCaseAttack.attack", false]], "attack_from_config() (aisdc.attacks.likelihood_attack.liraattack method)": [[0, "aisdc.attacks.likelihood_attack.LIRAAttack.attack_from_config", false]], "attack_from_prediction_files() (aisdc.attacks.worst_case_attack.worstcaseattack method)": [[0, "aisdc.attacks.worst_case_attack.WorstCaseAttack.attack_from_prediction_files", false]], "attack_from_preds() (aisdc.attacks.worst_case_attack.worstcaseattack method)": [[0, "aisdc.attacks.worst_case_attack.WorstCaseAttack.attack_from_preds", false]], "auc_p_val() (in module aisdc.metrics)": [[0, "aisdc.metrics.auc_p_val", false]], "check_checkpoint_equality() (in module aisdc.safemodel.classifiers.safekeras)": [[8, "aisdc.safemodel.classifiers.safekeras.check_checkpoint_equality", false]], "check_dp_used() (in module aisdc.safemodel.classifiers.safekeras)": [[8, "aisdc.safemodel.classifiers.safekeras.check_DP_used", false]], "check_epsilon() (aisdc.safemodel.classifiers.safekeras.safekerasmodel method)": [[8, "aisdc.safemodel.classifiers.safekeras.SafeKerasModel.check_epsilon", false]], "check_equal() (in module aisdc.safemodel.safemodel)": [[9, "aisdc.safemodel.safemodel.check_equal", false]], "check_max() (in module aisdc.safemodel.safemodel)": [[9, "aisdc.safemodel.safemodel.check_max", false]], "check_min() (in module aisdc.safemodel.safemodel)": [[9, "aisdc.safemodel.safemodel.check_min", false]], "check_optimizer_allowed() (in module aisdc.safemodel.classifiers.safekeras)": [[8, "aisdc.safemodel.classifiers.safekeras.check_optimizer_allowed", false]], "check_optimizer_is_dp() (in module aisdc.safemodel.classifiers.safekeras)": [[8, "aisdc.safemodel.classifiers.safekeras.check_optimizer_is_DP", false]], "check_type() (in module aisdc.safemodel.safemodel)": [[9, "aisdc.safemodel.safemodel.check_type", false]], "compile() (aisdc.safemodel.classifiers.safekeras.safekerasmodel method)": [[8, "aisdc.safemodel.classifiers.safekeras.SafeKerasModel.compile", false]], "create_json_report() (in module aisdc.attacks.report)": [[0, "aisdc.attacks.report.create_json_report", false]], "create_lr_report() (in module aisdc.attacks.report)": [[0, "aisdc.attacks.report.create_lr_report", false]], "create_mia_report() (in module aisdc.attacks.report)": [[0, "aisdc.attacks.report.create_mia_report", false]], "datanotavailable": [[6, "aisdc.preprocessing.loaders.DataNotAvailable", false]], "decision_tree_internal_trees_are_equal() (in module aisdc.safemodel.classifiers.safedecisiontreeclassifier)": [[7, "aisdc.safemodel.classifiers.safedecisiontreeclassifier.decision_tree_internal_trees_are_equal", false]], "decision_trees_are_equal() (in module aisdc.safemodel.classifiers.safedecisiontreeclassifier)": [[7, "aisdc.safemodel.classifiers.safedecisiontreeclassifier.decision_trees_are_equal", false]], "default() (aisdc.attacks.report.numpyarrayencoder method)": [[0, "aisdc.attacks.report.NumpyArrayEncoder.default", false]], "dp_epsilon_met() (aisdc.safemodel.classifiers.safekeras.safekerasmodel method)": [[8, "aisdc.safemodel.classifiers.safekeras.SafeKerasModel.dp_epsilon_met", false]], "dummyclassifier (class in aisdc.attacks.likelihood_attack)": [[0, "aisdc.attacks.likelihood_attack.DummyClassifier", false]], "examine_seperate_items() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.examine_seperate_items", false]], "example() (aisdc.attacks.likelihood_attack.liraattack method)": [[0, "aisdc.attacks.likelihood_attack.LIRAAttack.example", false]], "fit() (aisdc.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[7, "aisdc.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.fit", false]], "fit() (aisdc.safemodel.classifiers.safekeras.safekerasmodel method)": [[8, "aisdc.safemodel.classifiers.safekeras.SafeKerasModel.fit", false]], "fit() (aisdc.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[10, "aisdc.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.fit", false]], "fit() (aisdc.safemodel.classifiers.safesvc.safesvc method)": [[11, "aisdc.safemodel.classifiers.safesvc.SafeSVC.fit", false]], "generate_arrays() (aisdc.attacks.worst_case_attack.worstcaseattack method)": [[0, "aisdc.attacks.worst_case_attack.WorstCaseAttack.generate_arrays", false]], "get_current_and_saved_models() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.get_current_and_saved_models", false]], "get_data_sklearn() (in module aisdc.preprocessing.loaders)": [[6, "aisdc.preprocessing.loaders.get_data_sklearn", false]], "get_k_anonymity() (aisdc.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[10, "aisdc.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.get_k_anonymity", false]], "get_metrics() (in module aisdc.metrics)": [[0, "aisdc.metrics.get_metrics", false]], "get_params() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.get_params", false]], "get_probabilities() (in module aisdc.metrics)": [[0, "aisdc.metrics.get_probabilities", false]], "get_tree_k_anonymity() (in module aisdc.safemodel.classifiers.safedecisiontreeclassifier)": [[7, "aisdc.safemodel.classifiers.safedecisiontreeclassifier.get_tree_k_anonymity", false]], "line() (in module aisdc.attacks.report)": [[0, "aisdc.attacks.report.line", false]], "liraattack (class in aisdc.attacks.likelihood_attack)": [[0, "aisdc.attacks.likelihood_attack.LIRAAttack", false]], "load_safe_keras_model() (in module aisdc.safemodel.classifiers.safekeras)": [[8, "aisdc.safemodel.classifiers.safekeras.load_safe_keras_model", false]], "main() (in module aisdc.attacks.likelihood_attack)": [[0, "aisdc.attacks.likelihood_attack.main", false]], "main() (in module aisdc.attacks.worst_case_attack)": [[0, "aisdc.attacks.worst_case_attack.main", false]], "make_dummy_data() (aisdc.attacks.worst_case_attack.worstcaseattack method)": [[0, "aisdc.attacks.worst_case_attack.WorstCaseAttack.make_dummy_data", false]], "make_report() (aisdc.attacks.likelihood_attack.liraattack method)": [[0, "aisdc.attacks.likelihood_attack.LIRAAttack.make_report", false]], "make_report() (aisdc.attacks.worst_case_attack.worstcaseattack method)": [[0, "aisdc.attacks.worst_case_attack.WorstCaseAttack.make_report", false]], "min_max_disc() (in module aisdc.metrics)": [[0, "aisdc.metrics.min_max_disc", false]], "module": [[0, "module-aisdc.attacks.likelihood_attack", false], [0, "module-aisdc.attacks.report", false], [0, "module-aisdc.attacks.worst_case_attack", false], [0, "module-aisdc.metrics", false], [6, "module-aisdc.preprocessing.loaders", false], [7, "module-aisdc.safemodel.classifiers.safedecisiontreeclassifier", false], [8, "module-aisdc.safemodel.classifiers.safekeras", false], [9, "module-aisdc.safemodel.safemodel", false], [10, "module-aisdc.safemodel.classifiers.saferandomforestclassifier", false], [11, "module-aisdc.safemodel.classifiers.safesvc", false]], "numpyarrayencoder (class in aisdc.attacks.report)": [[0, "aisdc.attacks.report.NumpyArrayEncoder", false]], "posthoc_check() (aisdc.safemodel.classifiers.safekeras.safekerasmodel method)": [[8, "aisdc.safemodel.classifiers.safekeras.SafeKerasModel.posthoc_check", false]], "posthoc_check() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.posthoc_check", false]], "predict() (aisdc.attacks.likelihood_attack.dummyclassifier method)": [[0, "aisdc.attacks.likelihood_attack.DummyClassifier.predict", false]], "predict_proba() (aisdc.attacks.likelihood_attack.dummyclassifier method)": [[0, "aisdc.attacks.likelihood_attack.DummyClassifier.predict_proba", false]], "preliminary_check() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.preliminary_check", false]], "request_release() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.request_release", false]], "run_attack() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.run_attack", false]], "run_attack_reps() (aisdc.attacks.worst_case_attack.worstcaseattack method)": [[0, "aisdc.attacks.worst_case_attack.WorstCaseAttack.run_attack_reps", false]], "run_scenario_from_preds() (aisdc.attacks.likelihood_attack.liraattack method)": [[0, "aisdc.attacks.likelihood_attack.LIRAAttack.run_scenario_from_preds", false]], "safedecisiontreeclassifier (class in aisdc.safemodel.classifiers.safedecisiontreeclassifier)": [[7, "aisdc.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier", false]], "safekerasmodel (class in aisdc.safemodel.classifiers.safekeras)": [[8, "aisdc.safemodel.classifiers.safekeras.SafeKerasModel", false]], "safemodel (class in aisdc.safemodel.safemodel)": [[9, "aisdc.safemodel.safemodel.SafeModel", false]], "saferandomforestclassifier (class in aisdc.safemodel.classifiers.saferandomforestclassifier)": [[10, "aisdc.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier", false]], "safesvc (class in aisdc.safemodel.classifiers.safesvc)": [[11, "aisdc.safemodel.classifiers.safesvc.SafeSVC", false]], "same_configs() (in module aisdc.safemodel.classifiers.safekeras)": [[8, "aisdc.safemodel.classifiers.safekeras.same_configs", false]], "same_weights() (in module aisdc.safemodel.classifiers.safekeras)": [[8, "aisdc.safemodel.classifiers.safekeras.same_weights", false]], "save() (aisdc.safemodel.classifiers.safekeras.safekerasmodel method)": [[8, "aisdc.safemodel.classifiers.safekeras.SafeKerasModel.save", false]], "save() (aisdc.safemodel.safemodel.safemodel method)": [[9, "aisdc.safemodel.safemodel.SafeModel.save", false]], "set_fit_request() (aisdc.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[7, "aisdc.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.set_fit_request", false]], "set_fit_request() (aisdc.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[10, "aisdc.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.set_fit_request", false]], "set_predict_proba_request() (aisdc.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[7, "aisdc.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.set_predict_proba_request", false]], "set_predict_request() (aisdc.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[7, "aisdc.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.set_predict_request", false]], "set_score_request() (aisdc.safemodel.classifiers.safedecisiontreeclassifier.safedecisiontreeclassifier method)": [[7, "aisdc.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier.set_score_request", false]], "set_score_request() (aisdc.safemodel.classifiers.saferandomforestclassifier.saferandomforestclassifier method)": [[10, "aisdc.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier.set_score_request", false]], "setup_example_data() (aisdc.attacks.likelihood_attack.liraattack method)": [[0, "aisdc.attacks.likelihood_attack.LIRAAttack.setup_example_data", false]], "subtitle() (in module aisdc.attacks.report)": [[0, "aisdc.attacks.report.subtitle", false]], "title() (in module aisdc.attacks.report)": [[0, "aisdc.attacks.report.title", false]], "unknowndataset": [[6, "aisdc.preprocessing.loaders.UnknownDataset", false]], "worstcaseattack (class in aisdc.attacks.worst_case_attack)": [[0, "aisdc.attacks.worst_case_attack.WorstCaseAttack", false]]}, "objects": {"aisdc": [[0, 0, 0, "-", "metrics"]], "aisdc.attacks": [[0, 0, 0, "-", "likelihood_attack"], [0, 0, 0, "-", "report"], [0, 0, 0, "-", "worst_case_attack"]], "aisdc.attacks.likelihood_attack": [[0, 1, 1, "", "DummyClassifier"], [0, 1, 1, "", "LIRAAttack"], [0, 3, 1, "", "main"]], "aisdc.attacks.likelihood_attack.DummyClassifier": [[0, 2, 1, "", "predict"], [0, 2, 1, "", "predict_proba"]], "aisdc.attacks.likelihood_attack.LIRAAttack": [[0, 2, 1, "", "attack"], [0, 2, 1, "", "attack_from_config"], [0, 2, 1, "", "example"], [0, 2, 1, "", "make_report"], [0, 2, 1, "", "run_scenario_from_preds"], [0, 2, 1, "", "setup_example_data"]], "aisdc.attacks.report": [[0, 1, 1, "", "NumpyArrayEncoder"], [0, 3, 1, "", "add_output_to_pdf"], [0, 3, 1, "", "create_json_report"], [0, 3, 1, "", "create_lr_report"], [0, 3, 1, "", "create_mia_report"], [0, 3, 1, "", "line"], [0, 3, 1, "", "subtitle"], [0, 3, 1, "", "title"]], "aisdc.attacks.report.NumpyArrayEncoder": [[0, 2, 1, "", "default"]], "aisdc.attacks.worst_case_attack": [[0, 1, 1, "", "WorstCaseAttack"], [0, 3, 1, "", "main"]], "aisdc.attacks.worst_case_attack.WorstCaseAttack": [[0, 2, 1, "", "attack"], [0, 2, 1, "", "attack_from_prediction_files"], [0, 2, 1, "", "attack_from_preds"], [0, 2, 1, "", "generate_arrays"], [0, 2, 1, "", "make_dummy_data"], [0, 2, 1, "", "make_report"], [0, 2, 1, "", "run_attack_reps"]], "aisdc.metrics": [[0, 3, 1, "", "auc_p_val"], [0, 3, 1, "", "get_metrics"], [0, 3, 1, "", "get_probabilities"], [0, 3, 1, "", "min_max_disc"]], "aisdc.preprocessing": [[6, 0, 0, "-", "loaders"]], "aisdc.preprocessing.loaders": [[6, 4, 1, "", "DataNotAvailable"], [6, 4, 1, "", "UnknownDataset"], [6, 3, 1, "", "get_data_sklearn"]], "aisdc.safemodel": [[9, 0, 0, "-", "safemodel"]], "aisdc.safemodel.classifiers": [[7, 0, 0, "-", "safedecisiontreeclassifier"], [8, 0, 0, "-", "safekeras"], [10, 0, 0, "-", "saferandomforestclassifier"], [11, 0, 0, "-", "safesvc"]], "aisdc.safemodel.classifiers.safedecisiontreeclassifier": [[7, 1, 1, "", "SafeDecisionTreeClassifier"], [7, 3, 1, "", "decision_tree_internal_trees_are_equal"], [7, 3, 1, "", "decision_trees_are_equal"], [7, 3, 1, "", "get_tree_k_anonymity"]], "aisdc.safemodel.classifiers.safedecisiontreeclassifier.SafeDecisionTreeClassifier": [[7, 2, 1, "", "additional_checks"], [7, 2, 1, "", "fit"], [7, 2, 1, "", "set_fit_request"], [7, 2, 1, "", "set_predict_proba_request"], [7, 2, 1, "", "set_predict_request"], [7, 2, 1, "", "set_score_request"]], "aisdc.safemodel.classifiers.safekeras": [[8, 1, 1, "", "SafeKerasModel"], [8, 3, 1, "", "check_DP_used"], [8, 3, 1, "", "check_checkpoint_equality"], [8, 3, 1, "", "check_optimizer_allowed"], [8, 3, 1, "", "check_optimizer_is_DP"], [8, 3, 1, "", "load_safe_keras_model"], [8, 3, 1, "", "same_configs"], [8, 3, 1, "", "same_weights"]], "aisdc.safemodel.classifiers.safekeras.SafeKerasModel": [[8, 2, 1, "", "check_epsilon"], [8, 2, 1, "", "compile"], [8, 2, 1, "", "dp_epsilon_met"], [8, 2, 1, "", "fit"], [8, 2, 1, "", "posthoc_check"], [8, 2, 1, "", "save"]], "aisdc.safemodel.classifiers.saferandomforestclassifier": [[10, 1, 1, "", "SafeRandomForestClassifier"]], "aisdc.safemodel.classifiers.saferandomforestclassifier.SafeRandomForestClassifier": [[10, 2, 1, "", "additional_checks"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "get_k_anonymity"], [10, 2, 1, "", "set_fit_request"], [10, 2, 1, "", "set_score_request"]], "aisdc.safemodel.classifiers.safesvc": [[11, 1, 1, "", "SafeSVC"]], "aisdc.safemodel.classifiers.safesvc.SafeSVC": [[11, 2, 1, "", "additional_checks"], [11, 2, 1, "", "fit"]], "aisdc.safemodel.safemodel": [[9, 1, 1, "", "SafeModel"], [9, 3, 1, "", "check_equal"], [9, 3, 1, "", "check_max"], [9, 3, 1, "", "check_min"], [9, 3, 1, "", "check_type"]], "aisdc.safemodel.safemodel.SafeModel": [[9, 2, 1, "", "__apply_constraints"], [9, 2, 1, "", "__check_model_param"], [9, 2, 1, "", "__check_model_param_and"], [9, 2, 1, "", "__check_model_param_or"], [9, 2, 1, "", "__get_constraints"], [9, 2, 1, "", "__init__"], [9, 2, 1, "", "__str__"], [9, 5, 1, "", "__weakref__"], [9, 2, 1, "", "additional_checks"], [9, 2, 1, "", "examine_seperate_items"], [9, 2, 1, "", "get_current_and_saved_models"], [9, 2, 1, "", "get_params"], [9, 2, 1, "", "posthoc_check"], [9, 2, 1, "", "preliminary_check"], [9, 2, 1, "", "request_release"], [9, 2, 1, "", "run_attack"], [9, 2, 1, "", "save"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "exception", "Python exception"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:exception", "5": "py:attribute"}, "terms": {"": 8, "0": [0, 6, 8, 11], "01604": 0, "03570": 0, "05": 0, "1": [0, 3, 4, 5, 6, 7, 9, 10, 11], "10": [0, 11], "100": [0, 6], "1000": [0, 11], "11": 0, "12": 0, "1709": 0, "2": [0, 8], "2022": 8, "2112": 0, "24": 0, "3": [7, 10], "3dp": 6, "4": 0, "5": [0, 4, 9], "500": 6, "6": 0, "8": 8, "90": 0, "A": [0, 1, 5, 6, 9], "AND": 9, "For": [2, 5], "If": [0, 5, 9], "In": [0, 2], "It": [2, 4], "NOT": 8, "No": [8, 9], "OR": 9, "On": 8, "One": 0, "That": 10, "The": [0, 3, 4, 6, 7, 8, 9, 10], "Then": 2, "These": [6, 9], "To": [0, 8, 9], "__apply_constraint": 9, "__call__": 8, "__check_model_param": 9, "__check_model_param_and": 9, "__check_model_param_or": 9, "__dict__": [2, 9], "__get_constraint": 9, "__init__": [3, 9], "__str__": 9, "__weakref__": 9, "_forest": 0, "_tree": 7, "ab": 6, "about": 8, "acc": 0, "access": [0, 3, 5], "accuraci": [0, 8], "across": [0, 5], "activity_regular": 8, "actual": [0, 5, 8], "ad": [6, 7, 8, 10], "add": 3, "add_loss": 8, "add_metr": 8, "add_output_to_pdf": [0, 3], "addit": [5, 9], "additional_check": [7, 9, 10, 11], "administr": 3, "adr": 3, "advantag": 0, "ae": 6, "after": 2, "against": 0, "ai": [2, 5, 6], "aim": 4, "aisdc": [0, 6, 7, 8, 9, 10, 11], "alarm": 0, "alia": [7, 8, 10], "all": [0, 5, 6, 8], "allow": [0, 4, 7, 8, 10], "allow_nan": 0, "alreadi": 0, "also": [0, 3], "although": 2, "amongst": 0, "an": [0, 2, 4, 5, 7, 8, 10, 11], "analyt": 3, "andi": 4, "andrew": 8, "ani": [0, 3, 7, 8, 9, 10], "anonym": [7, 10], "api": 8, "appear": 10, "append": 0, "appli": [2, 5, 9], "apply_constraint": [2, 9], "appropri": [6, 8, 9], "approxim": 0, "ar": [0, 2, 4, 5, 6, 7, 9, 10], "architectur": 8, "arg": [0, 8], "argument": 0, "arial": 0, "around": 8, "arrai": 0, "array_equ": 2, "arxiv": 0, "as_fram": 0, "ask": 6, "assert": 0, "assess": 0, "associ": 8, "assumpt": 8, "attack": [3, 8, 9], "attack_config_json_file_nam": 0, "attack_experiment_logg": [0, 5], "attack_fail_fast": [0, 5], "attack_from_config": 0, "attack_from_pr": 0, "attack_from_prediction_fil": 0, "attack_instance_logg": [0, 5], "attack_metric_failfast_summari": 5, "attack_metric_success_comp_typ": [0, 5], "attack_metric_success_count_thresh": [0, 5], "attack_metric_success_nam": [0, 5], "attack_metric_success_thresh": [0, 5], "attack_nam": 9, "attack_output": 0, "attack_typ": 0, "attribut": [7, 8, 9, 10], "auc": [0, 5], "auc_p": 0, "auc_p_val": [0, 3], "auc_p_valu": 5, "auc_sig": 5, "auc_std": 0, "automat": [0, 2, 3, 6, 8], "avail": [0, 6, 7, 8, 10, 11], "averag": 0, "b": [0, 5], "back": [8, 9], "base": [0, 2, 3, 5, 10], "base_estim": 2, "base_estimator_": 2, "baseestim": 0, "baselin": [0, 5], "baseline_global_metr": 5, "basemodel_paramnam": 2, "basic": 2, "batch_siz": 8, "becaus": 8, "been": [0, 3, 6, 8, 9, 10], "behaviour": 0, "being": [2, 5], "belong": 0, "benefit": [1, 10], "beta": [0, 5], "beta_valu": 0, "between": [0, 6], "binari": 0, "binomi": 0, "block": [0, 10], "bool": [0, 2, 7, 8, 9, 10], "boolean": [0, 9], "bootstrap": 2, "border": 0, "both": [0, 5, 9], "box": 6, "br": 6, "c": 11, "calcul": [0, 5, 10], "call": [2, 4, 8, 9, 10], "can": [0, 2, 6], "cannot": [0, 8, 9], "care": 2, "case": [0, 3, 9], "categorical_crossentropi": 8, "ccp_alpha": 2, "cd": 2, "chanc": [0, 5], "chang": [2, 7, 8, 9, 10], "check": [3, 7, 8, 9, 10, 11], "check_checkpoint_equ": [3, 8], "check_circular": 0, "check_dp_us": [3, 8], "check_epsilon": 8, "check_equ": [3, 9], "check_input": 7, "check_max": [3, 9], "check_min": [3, 9], "check_optimizer_allow": [3, 8], "check_optimizer_is_dp": [3, 8], "check_typ": [3, 9], "checker": 9, "checkfil": 4, "checkpoint": 8, "choic": 0, "class": [0, 3, 7, 8, 10, 11], "class_weight": 2, "classifi": [0, 7, 8, 9, 10, 11], "clf": 0, "code": [0, 2], "column": [0, 5, 6], "com": 0, "combin": 5, "command": 0, "comment": 2, "common": [2, 4, 6], "compar": [7, 8, 9], "comparison": [5, 9], "compat": 0, "compil": 8, "complex": [8, 9], "compliant": 4, "compon": 5, "comput": [0, 5, 8], "compute_dtyp": 8, "compute_mask": 8, "confid": [0, 4, 5], "config": [0, 3], "configur": 5, "confirm": 3, "consid": [0, 5, 8], "constraint": [2, 9], "constructor": [0, 8, 9], "contain": [0, 2, 6, 9], "content": [0, 2, 9], "continu": 6, "control": 4, "convert": 0, "cope": 0, "copi": [3, 8, 9], "core": 3, "corefunction": 2, "correct": 5, "correspond": 0, "could": 8, "counter": 5, "cp": 2, "creat": [0, 2, 5, 8, 9], "create_json_report": [0, 3], "create_lr_report": [0, 3], "create_mia_report": [0, 3], "criteria": 5, "criterion": 2, "csv": [0, 6], "cur_val": 9, "curr_separ": [7, 9, 10, 11], "curr_val": 9, "current": 9, "dare": 3, "dareuk": 3, "data": [0, 3, 5, 6, 7], "data_fold": 6, "datafram": 6, "datanotavail": [3, 6], "dataset": [0, 6, 9], "dataset_nam": 6, "datastructur": [2, 9], "deal": [8, 9], "decis": [1, 2, 7], "decision_tree_internal_trees_are_equ": [3, 7], "decision_trees_are_equ": [3, 7], "decisiontreeclassifi": [4, 7], "deep": 9, "deepcopi": 2, "def": 2, "default": [0, 7, 8, 9, 10], "defin": [3, 9, 10], "definit": 0, "delet": 4, "deliber": [8, 9], "deliv": 3, "demonstr": 5, "depend": [0, 2, 9], "deprec": 8, "describ": [8, 9], "descript": 9, "design": [3, 4], "detail": [0, 1, 4], "determin": [5, 9], "deviat": [0, 5], "dhat": 11, "dict": [0, 2, 7, 8, 9, 10, 11], "dictionari": [0, 9], "differ": [0, 2, 5], "differenti": 8, "dim": 2, "dimens": 2, "directli": [0, 9], "directori": [2, 9], "disabl": 8, "disclos": 9, "disclosur": [4, 9], "discoveri": 0, "displai": 8, "distribut": [5, 8], "distribute_reduction_method": 8, "distribute_strategi": 8, "diustribut": 0, "do": [2, 4, 5, 6, 7, 8, 10, 11], "doc": 2, "document": 0, "doe": 8, "don": 6, "door": [8, 9], "download": 6, "downstream": 8, "dp": 8, "dp_epsilon_met": 8, "drawn": 10, "dtype": [0, 8], "dtype_polici": 8, "dummi": [0, 5], "dummy_attack_experiment_logg": 0, "dummy_attack_experiments_logg": 5, "dummy_attack_metrics_experiment_0": 5, "dummy_attack_metrics_experiment_1": 5, "dummy_attack_metrics_experiment_n": 5, "dummyclassifi": [0, 3], "dure": 8, "dynam": 8, "e": [0, 2, 5, 6, 7, 9, 10], "each": [0, 5, 7, 10], "eager": 8, "eagerli": 8, "earlier": 5, "edit": 2, "effect": [7, 10], "emploi": 8, "enable_metadata_rout": [7, 10], "enable_tune_steps_per_execut": 8, "encod": 0, "ensembl": 0, "ensur": 2, "ensure_ascii": 0, "entri": [0, 5, 6], "environ": [3, 4], "ep": 11, "epoch": 8, "epsilon": 8, "epsrc": 3, "eq": 5, "equal": [5, 7, 9], "error": [4, 7, 10], "especi": 9, "essenti": 0, "estim": [7, 10], "estimators_": 2, "estimators_samples_": 10, "etc": [5, 7], "eter": 4, "everi": 10, "examin": 9, "examine_separ": [3, 9], "examine_separately_item": 9, "examine_seperate_item": 9, "examine_seperately_item": 2, "exampl": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11], "except": 6, "exclud": [8, 9], "exist": [0, 2, 7, 9, 10], "expect": 9, "experi": [0, 5], "experiment_detail": 5, "explain": 5, "explicitli": 8, "explor": 1, "ext": 9, "extend": 3, "extens": [2, 9], "extra": 8, "extract": 2, "f": 2, "f1": 0, "fail": 0, "fail_count": 5, "failfast": 0, "failfast_metric_summari": 0, "fals": [0, 2, 5, 7, 8, 9, 10], "far": 0, "featur": [5, 6, 7, 10], "feature_importances_": [7, 10], "feedback": [4, 8], "file": [0, 3, 6, 8, 9], "filenam": [0, 9], "final": 8, "first": 5, "fit": [0, 3, 4, 7, 8, 9, 10, 11], "fix": 9, "flag": 0, "float": 0, "float64": 0, "fnr": 0, "folder": [0, 6], "follow": [0, 5, 6], "font": 0, "font_siz": 0, "font_styl": 0, "forest": 10, "form": [0, 8, 9], "format": [0, 2, 6, 8, 9], "found": [0, 2], "fpdf": 0, "fpr": [0, 5], "frequenc": 0, "from": [0, 2, 3, 8, 9, 10], "frozen": 8, "fulfil": 5, "full": 3, "function": [0, 3, 8, 9], "g": [2, 7, 9, 10], "gamma": 11, "gaussian": 0, "gener": [0, 3], "generate_arrai": 0, "get": 9, "get_current_and_saved_model": 9, "get_data_sklearn": [3, 6], "get_k_anonym": [2, 10], "get_metr": [0, 3], "get_param": 9, "get_prob": [0, 3], "get_tree_k_anonym": [3, 7], "get_weight": 2, "github": 0, "give": 4, "given": [0, 5, 7, 9, 10], "global": 5, "global_metr": 5, "go": 8, "gradientboostingclassifi": 2, "graimatt": 3, "grant": 3, "greater": [4, 5], "gt": 5, "gte": 5, "guarante": 8, "guid": [1, 7, 10], "guidelin": 3, "ha": [0, 3, 4, 5, 6, 7, 8, 9, 10], "handl": 2, "handler": 6, "harmon": 0, "have": [0, 2, 5, 6, 9], "haveth": 8, "hdr": 3, "health": 3, "help": 2, "helper": 3, "helpfunct": 2, "here": [7, 8, 10, 11], "high": 0, "highest": [0, 5], "hold": 5, "home": 6, "hospit": 6, "how": [0, 5, 7, 10], "http": [0, 3], "hyper": [0, 5], "hypothesi": 0, "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], "iaccd": 6, "id": [5, 9], "identifi": [4, 5, 9], "ignor": [7, 9, 10], "ignore_item": [3, 9], "ii": 8, "iia": 8, "iii": 8, "implement": [0, 1, 2, 4, 9], "import": [7, 10], "impur": 10, "inbound_nod": 8, "includ": [0, 3], "include_model_correct_featur": [0, 5], "inclus": 5, "incorrect": 0, "incorrectli": 0, "increas": 9, "indent": 0, "independ": 0, "index": [2, 3], "indian": 6, "indic": [0, 8, 9], "individu": 0, "infer": [0, 9], "inform": [0, 9], "inherit": 2, "injest": 0, "innov": 3, "input": [6, 8], "input_mask": 8, "input_shap": 8, "input_spec": 8, "inputspec": 8, "insid": [7, 10], "instanc": [0, 5, 8], "instance_0": 5, "instance_1": 5, "instance_n": 5, "instead": [7, 10], "int": [0, 7, 8, 10], "intend": 0, "interf": 9, "intern": 7, "introduct": 3, "invok": 0, "ion": 4, "iri": 6, "item": [0, 3, 7, 9], "iter": [0, 5], "its": 8, "iv": 8, "javascript": 2, "jim": 8, "jit_compil": 8, "json": [0, 3, 4, 9], "just": [2, 9], "k": [7, 10], "k_anonym": 2, "keep": 5, "kei": [2, 5, 9], "kera": [8, 9], "known": 0, "kwarg": [2, 7, 8, 10, 11], "label": [0, 6, 8], "last": [8, 9], "layer": [2, 8], "leaf": [7, 10], "learn": [2, 4, 9], "len": 2, "length": 3, "less": [4, 5, 9], "level": [8, 9], "like": 5, "likelihood": [0, 9], "likelihood_attack": 0, "likelihood_scenario": 0, "limit": [2, 8], "line": [0, 3], "link": [2, 5], "lira": [0, 3, 9], "lira_attack_exampl": 5, "liraattack": [0, 3], "list": [0, 2, 5, 8, 9], "liver": 6, "load": [6, 8], "load_breast_canc": 0, "load_safe_keras_model": [3, 8], "loader": 6, "local": 6, "log": [0, 5, 9], "log_id": 5, "log_p": 0, "log_tim": 5, "logger": 5, "logic": 9, "logp": 0, "loss": 8, "low": 0, "lowest": 0, "lt": 5, "lte": [0, 5], "m1": [2, 8], "m1d": 2, "m1layer": 2, "m2": [2, 8], "m2d": 2, "m2layer": 2, "machin": [2, 4, 9], "made": 5, "mai": [0, 2, 4, 9], "main": [0, 2, 3, 6], "maintain": [0, 5], "make": [0, 2, 8, 9], "make_dummy_data": 0, "make_report": 0, "man": 2, "mani": 5, "mask": 8, "master": 9, "match": 2, "matrix": 0, "max_depth": [0, 2, 5], "max_featur": 2, "max_leaf_nod": 2, "max_sampl": 2, "maxd": 0, "maximum": 9, "mc_pc_21033": 3, "mc_pc_23006": 3, "mccarti": 8, "mean": [0, 5, 6], "measur": 5, "mechan": [7, 10], "medic": 6, "meet": 8, "member": 0, "membership": [0, 9], "messag": 9, "meta": [7, 10], "metadata": [0, 5, 7, 9, 10], "metadata_rout": [7, 10], "meter": 4, "method": [0, 3, 4, 6, 7, 8, 9, 10, 11], "metric": [0, 5, 8], "metrics_nam": 8, "mia": [0, 3, 9], "mia_attack_model": [0, 5], "mia_attack_model_hyp": [0, 5], "mia_cl": 0, "mia_clf": 0, "mia_label": 0, "mia_metr": 0, "mia_metrics_dict": 0, "mia_scor": 0, "mia_test_label": 0, "mia_test_prob": 0, "mimic2": 6, "min": [4, 9], "min_impurity_decreas": 2, "min_max_desc": 0, "min_max_disc": [0, 3], "min_sample_split": 5, "min_samples_leaf": [0, 2, 4, 5, 9], "min_samples_split": [0, 2], "min_weight_fraction_leaf": 2, "mind": 0, "minimum": [5, 9, 10], "minmax": 6, "mmd": 0, "mnist": 6, "model": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11], "model_save_fil": [2, 4], "model_typ": [2, 4, 9], "modeltomakesaf": 2, "modul": [3, 8, 9], "modular": 3, "monoton": 0, "more": [2, 4, 9], "mortal": 6, "most": 5, "mr": 3, "mrc": 3, "msg": 9, "must": [0, 2, 4], "n": [4, 5], "n_dummy_rep": [0, 5], "n_estim": 2, "n_job": 2, "n_neg": 0, "n_neg_test_exampl": 5, "n_po": 0, "n_pos_test_exampl": 5, "n_rep": [0, 5], "n_row": 0, "n_rows_in": [0, 5], "n_rows_out": [0, 5], "n_shadow_model": [0, 5], "n_shadow_models_train": 5, "n_shadow_rows_confidences_min": [0, 5], "n_sig_auc_p_v": 5, "n_sig_auc_p_vals_correct": 5, "n_sig_pdif_v": 5, "n_sig_pdif_vals_correct": 5, "name": [5, 6, 7, 8, 9, 10], "name_scop": 8, "ndarrai": [0, 2, 7, 10, 11], "neag": 0, "necessari": 8, "necessarili": 8, "need": [0, 2, 8], "neg": 0, "nest": 6, "net": 8, "network": 2, "neural": 2, "never": 10, "new": 2, "new_model_templ": 2, "newli": [2, 8], "node": [7, 8], "noisi": 0, "non": [0, 8], "non_trainable_vari": 8, "non_trainable_weight": 8, "none": [0, 2, 7, 8, 9, 10, 11], "normalis": 6, "not_eq": 5, "notat": 2, "note": [0, 6, 7, 8, 9, 10], "notebook": [3, 7, 8, 10, 11], "noth": 0, "np": [0, 2], "npv": 0, "null": [0, 9], "null_auc_3sd_rang": 5, "num_exampl": 8, "num_sampl": 8, "number": [0, 2, 3, 5, 7, 8], "numlay": 2, "numpi": 0, "numpyarrayencod": [0, 3], "numpydoc": 2, "nurseri": 6, "o": 0, "object": [0, 2, 7, 9, 10], "observ": [0, 5], "offer": 8, "offlin": 0, "one": [0, 2, 5, 8], "onli": [0, 5, 7, 8, 9, 10], "oob_scor": 2, "open": [2, 4], "oper": [5, 9], "opt": 8, "optim": [8, 9], "optimis": 8, "option": [0, 3, 7, 8, 9, 10], "org": [0, 3], "origin": [7, 10], "other": [0, 2, 7, 10], "otherwis": [7, 10], "our": 8, "out": [0, 5, 6], "outbound_nod": 8, "output": [0, 3, 8, 9], "output_dir": [0, 9], "output_mask": 8, "output_shap": 8, "output_worstcas": 0, "outputs_lira": 0, "overload": 9, "overrid": [3, 8], "own": [0, 8], "p": [0, 5], "p_higher_auc": 0, "p_thresh": [0, 5], "p_valu": 5, "packag": [2, 4], "page": [2, 3], "panda": 6, "para": 4, "param": [0, 2, 4, 8], "paramet": [0, 2, 4, 5, 6, 7, 8, 9, 10], "paramnam": 3, "pars": 0, "parseabl": 4, "part": 3, "partnership": 3, "pass": [6, 7, 10], "path": 9, "pd": 6, "pdf": [0, 9], "pdf_report": 0, "pdif": 5, "pdif_sig": 5, "pdif_val": 5, "pearamet": 2, "per": [0, 8], "perform": 6, "perhap": 10, "permut": 0, "permute_row": 0, "phase": 3, "pictur": 3, "pipelin": [7, 10], "pkl": [4, 9], "placehold": 9, "pleas": [7, 10], "point": [0, 9], "polici": 8, "posit": [0, 5], "possibl": [5, 8, 9], "posthoc": 9, "posthoc_check": [8, 9], "potenti": 9, "ppv": 0, "pre": 6, "precis": 0, "pred": 5, "pred_prob": 0, "predict": [0, 5, 7], "predict_proba": [0, 7], "preen": 8, "prefix": 6, "preliminary_check": [2, 9], "preprocess": 3, "present": [4, 5, 9], "prevent": [8, 9], "print": 2, "privaci": [0, 2, 7, 8, 9, 10, 11], "probabl": [0, 5], "process": 6, "produc": [0, 8], "programm": 3, "programmat": 0, "project": [3, 6], "proport": [0, 5], "protect": [2, 7, 8, 9, 10, 11], "prototyp": 9, "provid": [0, 4, 7, 8, 10], "pull": 6, "pval": 0, "py": [0, 2, 6, 8], "pylont": 8, "pytest": 3, "python": [7, 8, 9, 10, 11], "quick": 3, "rais": [6, 7, 10], "rand": 0, "random": [0, 5, 10], "random_st": 2, "randomforestclassifi": [0, 5], "rang": [2, 5, 9], "rate": [0, 5], "ratio": 9, "re": 9, "read": [8, 9], "reason": 4, "recal": 0, "recognis": 6, "recommend": [4, 8, 9], "recommendat": 4, "record": [5, 8, 10], "reduc": 8, "refactor": 10, "refer": 9, "refine_epsilon": 8, "reflect": 2, "regular": 8, "relat": 5, "releas": 4, "relev": [0, 7, 9, 10], "remain": 0, "render": 2, "rep": 0, "repetit": [0, 5], "replac": 8, "replica": 8, "report": [0, 4, 5, 8, 9], "report_dest": 0, "report_lira": 0, "report_nam": [0, 5, 9], "report_worstcas": 0, "repres": 5, "reproduce_split": 0, "request": [7, 10], "request_releas": 9, "requir": [2, 5, 6], "research": [3, 4, 9], "reset_st": 8, "resourc": 3, "restart": [8, 9], "restrict": 9, "result": 9, "retain": [7, 10], "retriev": 8, "return": [0, 2, 6, 7, 8, 9, 10], "return_x_i": 0, "rf": 0, "richard": 8, "risk": [4, 9], "round": 6, "rout": [7, 10], "row": [0, 5, 6], "rst": 2, "rule": [3, 9], "run": [0, 3, 8, 9], "run_attack": 9, "run_attack_rep": 0, "run_eagerli": 8, "run_scenario_from_pr": 0, "runner": 6, "s010351": 3, "sacro": 3, "safe": [2, 9], "safedecisiontre": [2, 3], "safedecisiontreeclassifi": [3, 7], "safegradientboost": 2, "safekera": [2, 3, 8], "safekerasclassif": 9, "safekerasmodel": 3, "safemodel": [1, 3, 7, 8, 9, 10, 11], "safemodeltomakesaf": 2, "safer": 3, "saferandomforest": [2, 3], "saferandomforestclassifi": [3, 9, 10], "saferfmodel": 9, "safesvc": 3, "same": [2, 8, 9, 10], "same_config": [3, 8], "same_weight": [2, 3, 8], "sampl": [0, 5, 8, 10], "sample_weight": [7, 10], "satisfi": 5, "sav": 9, "save": [0, 4, 8, 9], "save_model": 8, "saved_model": [2, 9], "saved_separ": [7, 9, 10, 11], "saved_v": 9, "scale": 11, "scenario": 0, "score": [0, 7, 10], "sdc": [2, 5, 6], "search": 3, "second": 0, "see": [0, 7, 10], "self": [0, 2, 7, 9, 10], "semi": 3, "sensibl": 6, "separ": [0, 9], "sequenc": 8, "set": [0, 5, 6, 8, 9, 10], "set_config": [7, 10], "set_fit_request": [7, 10], "set_predict_proba_request": 7, "set_predict_request": 7, "set_score_request": [7, 10], "settabl": 8, "setup": 0, "setup_example_data": 0, "shadow": [0, 5], "shadow_clf": 0, "shadow_models_fail_fast": 0, "shadow_train_pr": 0, "shape": [0, 2, 8], "should": [0, 2, 7, 8, 10], "show": 0, "signific": 5, "similar": 5, "simpler": 10, "simpli": 0, "sinc": [0, 8, 9], "singl": [0, 5, 6, 9], "size": [2, 10], "skipkei": 0, "sklearn": [0, 2, 6, 7, 10], "small": 6, "smallest": 7, "smith": 8, "so": 2, "some": [0, 2, 6, 7, 8, 10], "sort": 5, "sort_kei": 0, "sort_prob": [0, 5], "sourc": [0, 2, 4, 6, 7, 8, 9, 10, 11], "specif": [2, 3, 5, 7, 9, 10, 11], "specifi": [0, 8, 9], "sphinx": 3, "split": 9, "standard": [0, 5, 6], "standardis": [5, 6], "standaridis": 5, "start": [0, 3], "state": 8, "state_upd": 8, "step": 2, "stop": 5, "store": [0, 2, 5, 6, 7, 9, 10, 11], "str": [0, 2, 6, 7, 8, 9, 10, 11], "strategi": 8, "stratifi": 0, "string": [8, 9], "structur": [0, 3, 7, 9], "sub": [7, 8, 10], "submodul": 8, "subset": [5, 10], "subtitl": [0, 3], "succcess_count": 5, "success": [0, 5], "sucha": 5, "suffici": 8, "suit": 2, "summari": 0, "super": [2, 9], "suppli": 0, "support": [3, 8, 11], "supports_mask": 8, "sure": 9, "svc": 11, "synth": 6, "t": 6, "taken": 2, "target": [0, 5, 6, 9], "target_model": [0, 5], "target_model_hyp": [0, 5], "target_path": 0, "target_train_pr": 0, "tell": 0, "templat": 3, "tensor": 8, "tensorflow": [0, 8, 9], "test": [0, 2, 5, 7, 9], "test_beta": [0, 5], "test_correct": 0, "test_data_filenam": [0, 5], "test_i": 0, "test_pr": 0, "test_preds_filenam": [0, 5], "test_prop": [0, 5], "test_siz": 0, "test_x": 0, "text": 0, "tf": 8, "than": [4, 5, 9], "the_kwd": 2, "thei": [0, 2, 6], "thetre": 7, "thi": [0, 1, 2, 3, 5, 7, 8, 9, 10], "thing": 5, "those": 9, "three": 5, "threshold": [5, 7], "through": 4, "thu": [8, 9], "time": 5, "timestamp": 2, "titl": [0, 3], "tnr": 0, "tool": 0, "top": 0, "tpr": [0, 5], "track": 8, "train": [0, 5, 8, 9], "train_beta": [0, 5], "train_correct": 0, "train_featur": 11, "train_i": 0, "train_label": 11, "train_pr": 0, "train_test_split": 0, "train_x": 0, "trainabl": 8, "trainable_vari": 8, "trainable_weight": 8, "training_data_filenam": [0, 5], "training_preds_filenam": [0, 5], "transform": 0, "tre": [4, 9], "tree": [1, 2, 7, 10], "tree1": 7, "tree1_tre": 7, "tree2": 7, "tree2_tre": 7, "true": [0, 2, 5, 7, 8, 9, 10], "trust": [3, 4], "tun": 0, "tupl": [0, 2, 6, 7, 8, 9, 10, 11], "tutori": 3, "two": [0, 7, 8, 9], "type": [0, 2, 5, 7, 9], "uk": 3, "unchang": [7, 10], "undefin": [8, 9], "under": [3, 5, 8], "uniqu": 5, "unit": 6, "unknowndataset": [3, 6], "unsaf": [4, 8], "unusu": 3, "updat": [3, 7, 8, 10], "upheld": 9, "upon": 0, "upstream": 8, "us": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10], "user": [0, 4, 6, 7, 8, 9, 10], "usernam": 9, "usual": 0, "util": [7, 10], "uw": 8, "v": 6, "v1": 8, "v2": 8, "val": [2, 9], "valid": 2, "validation_data": 8, "valu": [0, 4, 5, 6, 8, 9], "variabl": [0, 5, 6, 8], "variable_dtyp": 8, "varianc": 6, "variant": 8, "vector": 11, "verbos": [2, 8, 9], "version": [0, 2, 7, 8, 9, 10], "via": [6, 9], "violat": 9, "wa": [0, 3, 5, 8, 9], "warm_start": 2, "warn": [4, 8, 9], "we": [5, 6, 8, 9], "weak": 9, "weight": [2, 8], "were": [0, 3], "what": 3, "when": [0, 5, 9], "where": [4, 5], "whether": [0, 5, 8, 9], "which": [0, 5, 6, 8, 10], "white": 8, "within": [8, 9], "without": 8, "work": [0, 3, 6, 7, 10], "worst": [0, 3, 9], "worst_cas": [5, 9], "worst_case_attack": 0, "worst_case_attack_exampl": 5, "worstcas": 5, "worstcaseattack": [0, 3], "would": [0, 10], "wrap": 0, "wrapper": [2, 4, 8, 9], "write": [0, 3, 8, 9], "written": 2, "x": [0, 2, 6, 7, 8, 9, 10], "x_prop": 0, "x_shadow_train": 0, "x_target_train": 0, "x_test": 0, "x_train": 0, "xgboost": 2, "xla": 8, "xprop": 0, "y": [0, 2, 6, 7, 8, 9, 10], "y_pred_proba": 0, "y_shadow_train": 0, "y_target_train": 0, "y_test": 0, "y_train": 0, "y_true": 0, "you": [2, 7, 10], "yp": 0, "zero": 6}, "titles": ["Attacks", "Examples", "Extending SafeModel", "Welcome to the AI-SDC documentation!", "Introduction", "JSON Output for MIA attacks", "Preprocessing", "SafeDecisionTree", "SafeKerasModel", "Base Class", "SafeRandomForest", "SafeSVC"], "titleterms": {"The": 2, "__init__": 2, "add": 2, "ai": 3, "ani": 2, "api": 3, "attack": [0, 5], "base": 9, "case": 5, "check": 2, "class": [2, 9], "config": 5, "confirm": 2, "content": 3, "copi": 2, "core": 2, "data": 2, "defin": 2, "design": 2, "document": [2, 3], "examine_separ": 2, "exampl": 1, "extend": 2, "file": [2, 5], "fit": 2, "from": 5, "full": 1, "function": 2, "fund": 3, "gener": 5, "helper": 2, "i": 4, "ignore_item": 2, "includ": 2, "indic": 3, "introduct": 4, "item": 2, "json": [2, 5], "length": 1, "lira": 5, "method": 2, "mia": 5, "modular": 2, "notebook": 1, "option": 2, "output": 5, "overrid": 2, "paramnam": 2, "preprocess": 6, "pytest": 2, "quick": 1, "refer": 3, "rule": 2, "run": 5, "safedecisiontre": [1, 7], "safekera": 1, "safekerasmodel": 8, "safemodel": [2, 4], "safer": 2, "saferandomforest": [1, 10], "safesvc": [1, 11], "sdc": 3, "sphinx": 2, "start": 1, "statement": 3, "structur": [2, 5], "tabl": 3, "templat": 2, "tutori": 1, "unusu": 2, "updat": 2, "welcom": 3, "what": 4, "worst": 5, "write": 2}})